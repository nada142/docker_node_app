<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Containers List</title>
    <meta
      content="width=device-width, initial-scale=1.0, shrink-to-fit=no"
      name="viewport"
    />
    <link
      rel="icon"
      href="../assets/img/kaiadmin/favicon.ico"
      type="image/x-icon"
    />
    <!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.27/dist/sweetalert2.min.css">
<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.27/dist/sweetalert2.all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
  .dockerfile-actions {
                margin-top: 10px;
                display: flex;
                justify-content: space-between;
            }
            .dockerfile-actions button {
                margin-right: 10px;
            }
</style>
    <style>
      #terminal-container {
    background-color: #000;
    color: #00ff00;
    font-family: 'Courier New', Courier, monospace;
    padding: 10px;
    width: 100%;
    max-height: 150px; /* Adjust as needed */
    overflow-y: auto;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    margin-bottom: 20px; /* Adds space below the terminal */
}

#terminal-output {
    white-space: pre-wrap;
    margin-bottom: 10px;
}

#terminal-input {
    display: flex;
    align-items: center;
}

#terminal-input span {
    margin-right: 5px;
}

#terminal-command {
    background-color: #000;
    color: #00ff00;
    border: none;
    outline: none;
    width: 100%;
    font-family: 'Courier New', Courier, monospace;
}
.xterm {
    background-color: #000000 !important; /* Ensure black background */
    color: #00FF00 !important; /* Ensure green text */
    font-family: monospace !important; /* Use monospace font */
}


/* Ensure the container list is not hidden */
#container-list {
    margin-top: 20px;
}

    </style>

    <!-- Fonts and icons -->
    <script src="../assets/js/plugin/webfont/webfont.min.js"></script>
    <script>
      WebFont.load({
        google: { families: ["Public Sans:300,400,500,600,700"] },
        custom: {
          families: [
            "Font Awesome 5 Solid",
            "Font Awesome 5 Regular",
            "Font Awesome 5 Brands",
            "simple-line-icons",
          ],
          urls: ["../assets/css/fonts.min.css"],
        },
        active: function () {
          sessionStorage.fonts = true;
        },
      });
    </script>

    <!-- CSS Files -->
    <link rel="stylesheet" href="../assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="../assets/css/plugins.min.css" />
    <link rel="stylesheet" href="../assets/css/kaiadmin.min.css" />

    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link rel="stylesheet" href="../assets/css/demo.css" />
  </head>
  <body>
    <div class="wrapper">
      <!-- Sidebar -->
      <div class="sidebar" data-background-color="dark">
        <div class="sidebar-logo">
          <!-- Logo Header -->
          <div class="logo-header" data-background-color="dark">
			<a href="/" class="logo" style="display: flex; align-items: center;">
                <img
                  src="assets/img/kaiadmin/icon.svg"
                  alt="navbar brand"
                  class="navbar-brand"
                  height="20"
                />
                <span style="margin-left: 8px; font-size: 1.2em; font-weight: bold; color: aliceblue;">DockerPilot</span>
              </a>
            <div class="nav-toggle">
              <button class="btn btn-toggle toggle-sidebar">
                <i class="gg-menu-right"></i>
              </button>
              <button class="btn btn-toggle sidenav-toggler">
                <i class="gg-menu-left"></i>
              </button>
            </div>
            <button class="topbar-toggler more">
              <i class="gg-more-vertical-alt"></i>
            </button>
          </div>
          <!-- End Logo Header -->
        </div>
        <div class="sidebar-wrapper scrollbar scrollbar-inner">
          <div class="sidebar-content">
            <ul class="nav nav-secondary">
              <li class="nav-item">
                <a href="/" aria-expanded="false">
                  <i class="fas fa-home"></i>
                  <p>Dashboard</p>
                </a>
              </li>
              <li class="nav-item">
                <a href="/dockerfile_list">
                  <i class="fas fa-pen-square"></i>
                  <p>Dockerfile</p>
                </a>
              </li>
              <li class="nav-item">
                <a href="/dockerimg">
                  <i class="fas fa-layer-group"></i>
                  <p>Docker Images</p>
                </a>
              </li>
              <li class="nav-item active">
                <a href="/dockercontainers">
                  <i class="fas fa-th-list"></i>
                  <p>Docker Containers</p>
                </a>
              </li>
              <li class="nav-item">
                <a data-bs-toggle="collapse" href="#" onclick="logout()">
                  <i class="fas fa-bars"></i>
                  <p>Logout</p>
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <!-- End Sidebar -->

      <div class="main-panel">
        <div class="main-header">
          <div class="main-header-logo">
            <!-- Logo Header -->
            <div class="logo-header" data-background-color="dark">
              <a href="/" class="logo" style="display: flex; align-items: center;">
                <img
                  src="assets/img/kaiadmin/icon.svg"
                  alt="navbar brand"
                  class="navbar-brand"
                  height="20"
                />
                <span style="margin-left: 8px; font-size: 1.2em; font-weight: bold; color: aliceblue;">DockerPilot</span>
              </a>
              <div class="nav-toggle">
                <button class="btn btn-toggle toggle-sidebar">
                  <i class="gg-menu-right"></i>
                </button>
                <button class="btn btn-toggle sidenav-toggler">
                  <i class="gg-menu-left"></i>
                </button>
              </div>
              <button class="topbar-toggler more">
                <i class="gg-more-vertical-alt"></i>
              </button>
            </div>
            <!-- End Logo Header -->
          </div>
          <!-- Navbar Header -->
          <nav
          class="navbar navbar-header navbar-header-transparent navbar-expand-lg border-bottom"
        >
          <div class="container-fluid">
            <nav
              class="navbar navbar-header-left navbar-expand-lg navbar-form nav-search p-0 d-none d-lg-flex"
            >
              <div class="input-group">
                <div class="input-group-prepend">
                  <button type="submit" onclick="recherche()" class="btn btn-search pe-1">

                    <i class="fa fa-search search-icon"></i>
                  </button>
                </div>
                <input type="text" name="table_search" id="myInput" onkeyup="recherche()" class="form-control" placeholder="Search">

                
              
              </div>
            </nav>

            <ul class="navbar-nav topbar-nav ms-md-auto align-items-center">
              <li class="nav-item topbar-user dropdown hidden-caret">
                <a
                  class="dropdown-toggle profile-pic"
                  data-bs-toggle="dropdown"
                  href="/profile"
                  aria-expanded="false"
                >
                
                  
                  <span class="profile-username">
                    <span class="op-7">Hi,</span>
                    <span class="fw-bold">Hizrian</span>
                  </span>
                </a>
                <ul class="dropdown-menu dropdown-user animated fadeIn">
                  <div class="dropdown-user-scroll scrollbar-outer">
                    <li>
                      <div class="user-box">
                        <div class="avatar-lg">
                          <img
                            src="assets/img/profile.jpg"
                            alt="image profile"
                            class="avatar-img rounded"
                          />
                        </div>
                        <div class="u-text">
                          <h4>Hizrian</h4>
                          <p class="text-muted">hello@example.com</p>
                          <a
                            href="/profile"
                            class="btn btn-xs btn-secondary btn-sm"
                            >Update Profile</a
                          >
                        </div>
                      </div>
                    </li>
                    <li>
                      <div class="dropdown-divider"></div>
                     
                      <a class="dropdown-item" href="#" onclick="logout()">Logout</a>
                    </li>
                  </div>
                </ul>
              </li>
            </ul>
          </div>
        </nav>
          <script>
            document.addEventListener("DOMContentLoaded", function() {
  var user = JSON.parse(localStorage.getItem("user"));
  if (user) {
      document.querySelector(".profile-username .fw-bold").textContent = user.username;
      document.querySelector(".u-text h4").textContent = user.username;
      document.querySelector(".u-text .text-muted").textContent = user.email;
  }
});
          </script>
          <!-- End Navbar -->
        </div>

        <div class="container">
          <div class="page-inner">
            <div class="page-header">
              <h3 class="fw-bold mb-3">Docker Containers List</h3>
              <ul class="breadcrumbs mb-3"  id="images-list">
                <li class="nav-home">
                  <a href="#">
                    <i class="icon-home"></i>
                  </a>
                </li>
                <li class="separator">
                  <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                  <a href="#">dockercontainers</a>
                </li>
                <li class="separator">
                  <i class="icon-arrow-right"></i>
                </li>
              </ul>
              <button class="btn btn-primary" onclick="location.href='/add_container'">Add Container</button>

            </div>
            <div class="row" >
              <div class="col-md-12">
                <div class="card">
                  <div id="containersContainer">
                  <div class="card-header">
                    <h4 class="card-title">Container1</h4>
                  </div>
                  <div class="card-body">
                  
                    <p class="demo">
                      <button class="btn btn-black">Delete</button>
                      <button class="btn btn-danger">Stop</button>
                      <button class="btn btn-success">Run</button>
                    </p>
                  </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
       
      
      
   
         
        <script>
          document.addEventListener("DOMContentLoaded", function() {
    fetchDockerContainers();

    async function fetchDockerContainers() {
        try {
            const response = await fetch('/containers');
            const containers = await response.json();
            const containersContainer = document.getElementById('containersContainer');
            
            containersContainer.innerHTML = ''; 

            let row; 

            containers.forEach((container, index) => {
                if (index % 2 === 0) {
                    row = document.createElement('div');
                    row.className = 'row'; 
                    containersContainer.appendChild(row); 
                }

                const containerElement = document.createElement('div');
                containerElement.className = ''; 
                containerElement.innerHTML = `
                    <div class="card">
                      <div class="card-header">
                        <h4 class="card-title text-center">${container.name}</h4>
                      </div>
                      <div class="card-body">
                        <h5>ID: ${container.containerId}</h5>
                        <h5>Status: ${container.status}</h5>
                        <h5>Image: ${container.image}</h5> <!-- Added the image name here -->
                        <p class="demo">
                        <div class="text-center dockerfile-actions">

                          <button class="btn btn-danger" onclick="deleteContainer('${container.containerId}')">Delete</button>
                          <button class="btn btn-info" onclick="restartContainer('${container.containerId}')">Restart</button>
                          <button class="btn btn-warning" onclick="stopContainer('${container.containerId}')">Stop</button>
                        </div>
                          </p>
                      </div>
                      <div class="card-footer">
                        <div id="terminal-container-${container.containerId}" style="height: 300px , color:black;"></div>
<button class="btn btn-info" onclick="connectTerminal('${container.containerId}')">Connect to Terminal</button>


                      </div>
                    </div>
                `;
                row.appendChild(containerElement); 
            });
        } catch (error) {
            console.error('Error fetching Docker containers:', error);
        }
    }



// Function to delete a Docker container
window.deleteContainer = async function(containerId) {
    try {
        const response = await fetch(`/containers/${containerId}`, { method: 'DELETE' });
        
        if (response.ok) {
            Swal.fire('Deleted!', 'Container deleted successfully.', 'success').then(() => {
                location.reload(); 
            });
        } else {
            const errorData = await response.json();
            Swal.fire('Error!', errorData.message, 'error');
        }
    } catch (error) {
        console.error('Error deleting Docker container:', error);
        Swal.fire('Error!', 'An error occurred while deleting the container.', 'error');
    }
};

// Function to stop a Docker container
window.stopContainer = async function(containerId) {
    try {
        const response = await fetch(`/containers/${containerId}/stop`, { method: 'POST' });
        
        if (response.ok) {
            Swal.fire('Stopped!', 'Container stopped successfully.', 'success').then(() => {
                fetchDockerContainers(); 
            });
        } else {
            const errorData = await response.json();
            Swal.fire('Error!', errorData.message, 'error');
        }
    } catch (error) {
        console.error('Error stopping Docker container:', error);
        Swal.fire('Error!', 'An error occurred while stopping the container.', 'error');
    }
};

// Function to restart a Docker container
window.restartContainer = async function(containerId) {
    try {
        const response = await fetch(`/containers/${containerId}/restart`, { method: 'POST' });

        if (response.ok) {
            Swal.fire('Restarted!', 'Container restarted successfully.', 'success').then(() => {
                fetchDockerContainers(); 
            });
        } else {
            const errorData = await response.json();
            Swal.fire('Error!', errorData.message || 'Failed to restart the container.', 'error');
        }
    } catch (error) {
        console.error('Error restarting Docker container:', error);
        Swal.fire('Error!', 'An unexpected error occurred while restarting the container.', 'error');
    }
};


});





document.addEventListener('DOMContentLoaded', function() {
    const terminalInput = document.getElementById('terminal-command');
    const terminalOutput = document.getElementById('terminal-output');

    if (terminalInput) {
        terminalInput.addEventListener('keydown', function(e) {
            if (e.key === 'Enter') {
                const command = terminalInput.value.trim();
                if (command) {
                    terminalOutput.innerHTML += `<div>$ ${command}</div>`;
                    terminalInput.value = '';
                    simulateCommandExecution(command, terminalOutput);
                }
            }
        });
    }
});

function simulateCommandExecution(command, outputElement) {
    setTimeout(() => {
        outputElement.innerHTML += `<div>Executed: ${command}</div>`;
        outputElement.scrollTop = outputElement.scrollHeight;
    }, 500);
}


          </script>
         <script src="https://cdn.jsdelivr.net/npm/xterm/lib/xterm.js"></script>
         <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/xterm/css/xterm.css">
         <script src="https://cdn.jsdelivr.net/npm/xterm/lib/xterm.js"></script>
         
         <div id="terminal-container-${container.containerId}" class="xterm" style="height: 300px;"></div>
         <button class="btn btn-info" onclick="connectTerminal('${container.containerId}')">Connect to Terminal</button>
         
         <script>
         function connectTerminal(containerId) {
             if (!containerId) {
                 alert('Container ID is required to connect to the terminal.');
                 return;
             }
         
             const terminalContainerId = `terminal-container-${containerId}`;
             const terminalElement = document.getElementById(terminalContainerId);
             
             if (!terminalElement) {
                 console.error(`Terminal container with ID ${terminalContainerId} not found.`);
                 return;
             }
         
             terminalElement.classList.add('xterm');
         
             const terminal = new Terminal({
                 cursorBlink: true,
                 theme: {
                     background: '#000000',
                     foreground: '#00FF00'
                 }
             });
             terminal.open(terminalElement);
         
             const socket = new WebSocket(`ws://localhost:8080?containerId=${containerId}`);
         
             socket.addEventListener('open', () => {
                 console.log(`WebSocket connection established for container ${containerId}`);
             });
         
             let messageBuffer = '';
             socket.addEventListener('message', (event) => {
                 messageBuffer += event.data;
                 terminal.write(messageBuffer);
                 messageBuffer = '';
             });
         
             socket.addEventListener('close', () => {
                 console.log(`WebSocket connection closed for container ${containerId}`);
             });
         
             socket.addEventListener('error', (error) => {
                 console.error(`WebSocket error for container ${containerId}:`, error);
             });
         
             terminal.onData((data) => {
                 socket.send(data);
             });
         
             terminal.onResize(({ cols, rows }) => {
                 socket.send(JSON.stringify({ type: 'resize', cols, rows }));
             });
         }
         </script>
         
        
       
        <footer class="footer">
          <div class="container-fluid d-flex justify-content-between">
            <div class="copyright">
              2024, made by
              <h6>Nada Bouaziz</h6>
            </div>
            <div>
              
              <a target="_blank">DockerPilot</a>.
            </div>
          </div>
        </footer>
      </div>
      
      <!-- End Custom template -->
    </div>
    <!--   Core JS Files   -->
    <script src="../assets/js/core/jquery-3.7.1.min.js"></script>
    <script src="../assets/js/core/popper.min.js"></script>
    <script src="../assets/js/core/bootstrap.min.js"></script>

    <!-- jQuery Scrollbar -->
    <script src="../assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <!-- Moment JS -->
    <script src="../assets/js/plugin/moment/moment.min.js"></script>

    <!-- Chart JS -->
    <script src="../assets/js/plugin/chart.js/chart.min.js"></script>

    <!-- jQuery Sparkline -->
    <script src="../assets/js/plugin/jquery.sparkline/jquery.sparkline.min.js"></script>

    <!-- Chart Circle -->
    <script src="../assets/js/plugin/chart-circle/circles.min.js"></script>

    <!-- Datatables -->
    <script src="../assets/js/plugin/datatables/datatables.min.js"></script>

    <!-- Bootstrap Notify -->
    <script src="../assets/js/plugin/bootstrap-notify/bootstrap-notify.min.js"></script>

    <!-- jQuery Vector Maps -->
    <script src="../assets/js/plugin/jsvectormap/jsvectormap.min.js"></script>
    <script src="../assets/js/plugin/jsvectormap/world.js"></script>

    <!-- Sweet Alert -->
    <script src="../assets/js/plugin/sweetalert/sweetalert.min.js"></script>

    <!-- Kaiadmin JS -->
    <script src="../assets/js/kaiadmin.min.js"></script>
    <script src="../assets/js/script.js"></script>

    <!-- Kaiadmin DEMO methods, don't include it in your project! -->
    <script src="../assets/js/setting-demo2.js"></script>
    <script>
      function logout()
      {
          var c  = window.confirm("want to log out");
          if (c == true)
          {
          localStorage.clear();
          location.replace("/login");
          }
      }
    </script>
    <script>
      function recherche() {
        var input, filter, cards, card, title, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        cards = document.getElementsByClassName("card");
        
        for (i = 0; i < cards.length; i++) {
            card = cards[i];
            title = card.getElementsByClassName("card-title")[0]; 
            if (title) {
                txtValue = title.textContent || title.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    card.style.display = ""; 
                } else {
                    card.style.display = "none";
                }
            }       
        }
    }
    
    </script>
  </body>
</html>
